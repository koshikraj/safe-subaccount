import{B as p,f as w,h as b,i as h,I as m,j as O,k as L,l as E,m as x,H as y,n as M}from"./index-1a74f274.js";class R extends p{constructor({callbackSelector:e,cause:t,data:o,extraData:c,sender:u,urls:r}){var i;super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],(i=t.metaMessages)!=null&&i.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(d=>`    ${w(d)}`)],`  Sender: ${u}`,`  Data: ${o}`,`  Callback selector: ${e}`,`  Extra data: ${c}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class $ extends p{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${w(t)}`,`Response: ${b(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class S extends p{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}function A(a,e){if(!h(a,{strict:!1}))throw new m({address:a});if(!h(e,{strict:!1}))throw new m({address:e});return a.toLowerCase()===e.toLowerCase()}const C="0x556f1830",j={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function P(a,{blockNumber:e,blockTag:t,data:o,to:c}){const{args:u}=O({data:o,abi:[j]}),[r,i,d,s,n]=u,{ccipRead:f}=a,g=f&&typeof(f==null?void 0:f.request)=="function"?f.request:q;try{if(!A(c,r))throw new S({sender:r,to:c});const l=await g({data:d,sender:r,urls:i}),{data:k}=await L(a,{blockNumber:e,blockTag:t,data:E([s,x([{type:"bytes"},{type:"bytes"}],[l,n])]),to:c});return k}catch(l){throw new R({callbackSelector:s,cause:l,data:o,extraData:n,sender:r,urls:i})}}async function q({data:a,sender:e,urls:t}){var c;let o=new Error("An unknown error occurred.");for(let u=0;u<t.length;u++){const r=t[u],i=r.includes("{data}")?"GET":"POST",d=i==="POST"?{data:a,sender:e}:void 0;try{const s=await fetch(r.replace("{sender}",e).replace("{data}",a),{body:JSON.stringify(d),method:i});let n;if((c=s.headers.get("Content-Type"))!=null&&c.startsWith("application/json")?n=(await s.json()).data:n=await s.text(),!s.ok){o=new y({body:d,details:n!=null&&n.error?b(n.error):s.statusText,headers:s.headers,status:s.status,url:r});continue}if(!M(n)){o=new $({result:n,url:r});continue}return n}catch(s){o=new y({body:d,details:s.message,url:r})}}throw o}export{q as ccipRequest,P as offchainLookup,j as offchainLookupAbiItem,C as offchainLookupSignature};
